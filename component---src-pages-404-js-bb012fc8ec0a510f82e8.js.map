{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/SEO/index.js","webpack:///./src/components/Layout/index.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_SEO__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","SEO","_ref","description","lang","meta","_public_static_d_3497927624_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","Layout","state","opened","toggleOpenSlider","_this","setState","preState","_this$props","children","react__WEBPACK_IMPORTED_MODULE_2___default","className","styles","layout","_SEO__WEBPACK_IMPORTED_MODULE_3__","pathname"],"mappings":"+LAMMA,4FACJC,OAAA,WAAS,IAEDC,EADWC,KAAKC,MAAdC,KACeC,KAAKC,aAAaC,MAEzC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUV,KAAKC,MAAMS,SAAUL,MAAON,GAC5CO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKN,MAAM,mBACXC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,yEATmBI,IAAMC,WAelBhB,YAER,IAAMiB,EAAS,8GCXtB,SAASC,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMd,EAASW,EAATX,MAC9BF,EADuCiB,EAAAlB,KACvCC,KAaFkB,EAAkBJ,EAExB,OACEX,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACEgB,eAAgB,CACdL,QAEFb,MAAOA,EACPmB,cAAa,QAAUrB,EAAKC,aAAaC,MACzCc,KAAM,CACJ,CACEM,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAASrB,GAEX,CACEsB,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASvB,EAAKC,aAAawB,QAE7B,CACEH,KAAI,gBACJC,QAASrB,GAEX,CACEoB,KAAI,sBACJC,QAASL,IAEXQ,OAAOV,KAKfJ,EAAIe,aAAe,CACjBZ,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbF,EAAIgB,UAAY,CACdd,YAAae,IAAUC,OACvBf,KAAMc,IAAUC,OAChBd,KAAMa,IAAUE,QAAQF,IAAUG,QAClC9B,MAAO2B,IAAUC,OAAOG,YAGXrB,yHClFTsB,sJACJC,MAAQ,CAAEC,QAAQ,KAQlBC,iBAAmB,WACjBC,EAAKC,SAAS,SAAAC,GACZ,MAAO,CAAEJ,QAASI,EAASJ,yCAI/BzC,OAAA,WAAS,IAAA8C,EACkC5C,KAAKC,MAAtCI,EADDuC,EACCvC,MAAOY,EADR2B,EACQ3B,YAAa4B,EADrBD,EACqBC,SAG5B,OACEC,EAAAvC,EAAAC,cAAA,OAAKuC,UAAWC,IAAOC,QACrBH,EAAAvC,EAAAC,cAAC0C,EAAA,EAAD,CAAK7C,MAAOA,EAAOY,YAAaA,IAC/B4B,4CAhBL,MADc,MADO7C,KAAKC,MAAlBS,SAEQyC,gBANCvC,IAAMC,WA4BZwB","file":"component---src-pages-404-js-bb012fc8ec0a510f82e8.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport SEO from '../SEO'\nimport styles from \"./index.module.css\"\n\nclass Layout extends React.Component {\n  state = { opened: false }\n\n  get isHomePage() {\n    const { location } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    return location.pathname === rootPath\n  }\n\n  toggleOpenSlider = () => {\n    this.setState(preState => {\n      return { opened: !preState.opened }\n    })\n  }\n\n  render() {\n    const { title, description, children } = this.props\n    // const rootPath = `${__PATH_PREFIX__}/`\n\n    return (\n      <div className={styles.layout}>\n        <SEO title={title} description={description} />\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}